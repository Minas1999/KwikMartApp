/*
Deployment script for Kwikmart

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Kwikmart"
:setvar DefaultFilePrefix "Kwikmart"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[Categoryes]...';


GO
CREATE TABLE [dbo].[Categoryes] (
    [category_id]   INT            NOT NULL,
    [category_name] NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Categoryes] PRIMARY KEY CLUSTERED ([category_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Companyes]...';


GO
CREATE TABLE [dbo].[Companyes] (
    [company_id]      INT            NOT NULL,
    [company_name]    NVARCHAR (55)  NOT NULL,
    [company_address] NVARCHAR (100) NOT NULL,
    [company_pNumber] NCHAR (15)     NOT NULL,
    [company_gmail]   VARCHAR (100)  NOT NULL,
    [company_img_url] VARCHAR (MAX)  NOT NULL,
    CONSTRAINT [PK_Companyes] PRIMARY KEY CLUSTERED ([company_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Department_Categoryes]...';


GO
CREATE TABLE [dbo].[Department_Categoryes] (
    [department_id] INT NOT NULL,
    [category_id]   INT NOT NULL,
    CONSTRAINT [PK_DepartmentCategoryes] PRIMARY KEY CLUSTERED ([department_id] ASC, [category_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Departments]...';


GO
CREATE TABLE [dbo].[Departments] (
    [department_id]   INT            NOT NULL,
    [department_name] NVARCHAR (100) NOT NULL,
    [department_img]  VARCHAR (MAX)  NOT NULL,
    CONSTRAINT [PK_Departments] PRIMARY KEY CLUSTERED ([department_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Foods]...';


GO
CREATE TABLE [dbo].[Foods] (
    [food_id]      INT            IDENTITY (1, 1) NOT NULL,
    [food_name]    NVARCHAR (55)  NOT NULL,
    [food_price]   INT            NOT NULL,
    [food_desc]    NVARCHAR (255) NULL,
    [food_ctg_id]  INT            NOT NULL,
    [food_cmp_id]  INT            NOT NULL,
    [food_img_url] VARCHAR (MAX)  NOT NULL,
    CONSTRAINT [PK_Foods] PRIMARY KEY CLUSTERED ([food_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Manufacturer]...';


GO
CREATE TABLE [dbo].[Manufacturer] (
    [name] NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Manufacturer] PRIMARY KEY CLUSTERED ([name] ASC)
);


GO
PRINT N'Creating Table [dbo].[Manufacturer_Foods]...';


GO
CREATE TABLE [dbo].[Manufacturer_Foods] (
    [manufacturer_name] NVARCHAR (100) NOT NULL,
    [food_id]           INT            NOT NULL,
    CONSTRAINT [PK_ManufacturerFoods] PRIMARY KEY CLUSTERED ([manufacturer_name] ASC, [food_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Order_Foods]...';


GO
CREATE TABLE [dbo].[Order_Foods] (
    [order_id]       INT NOT NULL,
    [food_id]        INT NOT NULL,
    [products_count] INT NOT NULL,
    CONSTRAINT [PK_OrderFoods] PRIMARY KEY CLUSTERED ([order_id] ASC, [food_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Orders]...';


GO
CREATE TABLE [dbo].[Orders] (
    [ord_id]         INT  NOT NULL,
    [ord_date]       DATE NOT NULL,
    [ord_tmOfTaken]  DATE NOT NULL,
    [ord_ttl_amount] INT  NOT NULL,
    [ord_user_id]    INT  NOT NULL,
    CONSTRAINT [PK_Orders] PRIMARY KEY CLUSTERED ([ord_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Orders_History]...';


GO
CREATE TABLE [dbo].[Orders_History] (
    [order_id]   INT  NOT NULL,
    [order_date] DATE NOT NULL,
    [price]      INT  NOT NULL,
    [user_id]    INT  NOT NULL,
    [curier_id]  INT  NULL,
    CONSTRAINT [PK_OrdersHistory] PRIMARY KEY CLUSTERED ([order_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Rates]...';


GO
CREATE TABLE [dbo].[Rates] (
    [user_id] INT        NOT NULL,
    [food_id] INT        NOT NULL,
    [rate]    NCHAR (15) NULL,
    CONSTRAINT [PK_Rates] PRIMARY KEY CLUSTERED ([user_id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Roles]...';


GO
CREATE TABLE [dbo].[Roles] (
    [role_name] VARCHAR (25) NOT NULL,
    CONSTRAINT [PK_Roles] PRIMARY KEY CLUSTERED ([role_name] ASC)
);


GO
PRINT N'Creating Table [dbo].[User_Roles]...';


GO
CREATE TABLE [dbo].[User_Roles] (
    [user_id]   INT          NOT NULL,
    [role_name] VARCHAR (25) NOT NULL,
    CONSTRAINT [PK_UserRoles] PRIMARY KEY CLUSTERED ([user_id] ASC, [role_name] ASC)
);


GO
PRINT N'Creating Table [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [user_id]         INT            IDENTITY (1, 1) NOT NULL,
    [user_name]       NVARCHAR (55)  NOT NULL,
    [user_norm_name]  NVARCHAR (55)  NULL,
    [user_pNumber]    VARCHAR (255)  NOT NULL,
    [user_gmail]      VARCHAR (100)  NULL,
    [user_norm_gmail] VARCHAR (100)  NULL,
    [user_address]    NVARCHAR (100) NOT NULL,
    [user_password]   VARCHAR (MAX)  NOT NULL,
    [user_status]     VARCHAR (100)  NOT NULL,
    CONSTRAINT [PK_Users] PRIMARY KEY CLUSTERED ([user_id] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Dep_Cat_category_id]...';


GO
ALTER TABLE [dbo].[Department_Categoryes]
    ADD CONSTRAINT [FK_Dep_Cat_category_id] FOREIGN KEY ([category_id]) REFERENCES [dbo].[Categoryes] ([category_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Dep_Cat_department_id]...';


GO
ALTER TABLE [dbo].[Department_Categoryes]
    ADD CONSTRAINT [FK_Dep_Cat_department_id] FOREIGN KEY ([department_id]) REFERENCES [dbo].[Departments] ([department_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Foods_company]...';


GO
ALTER TABLE [dbo].[Foods]
    ADD CONSTRAINT [FK_Foods_company] FOREIGN KEY ([food_cmp_id]) REFERENCES [dbo].[Companyes] ([company_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Foods_category]...';


GO
ALTER TABLE [dbo].[Foods]
    ADD CONSTRAINT [FK_Foods_category] FOREIGN KEY ([food_ctg_id]) REFERENCES [dbo].[Categoryes] ([category_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Manufacturer_Foods_food_id]...';


GO
ALTER TABLE [dbo].[Manufacturer_Foods]
    ADD CONSTRAINT [FK_Manufacturer_Foods_food_id] FOREIGN KEY ([food_id]) REFERENCES [dbo].[Foods] ([food_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Manufacturer_Foods_manufacturer_name]...';


GO
ALTER TABLE [dbo].[Manufacturer_Foods]
    ADD CONSTRAINT [FK_Manufacturer_Foods_manufacturer_name] FOREIGN KEY ([manufacturer_name]) REFERENCES [dbo].[Manufacturer] ([name]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Order_Foods_order_id]...';


GO
ALTER TABLE [dbo].[Order_Foods]
    ADD CONSTRAINT [FK_Order_Foods_order_id] FOREIGN KEY ([order_id]) REFERENCES [dbo].[Orders] ([ord_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Order_Foods_food_id]...';


GO
ALTER TABLE [dbo].[Order_Foods]
    ADD CONSTRAINT [FK_Order_Foods_food_id] FOREIGN KEY ([food_id]) REFERENCES [dbo].[Foods] ([food_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Orders_user]...';


GO
ALTER TABLE [dbo].[Orders]
    ADD CONSTRAINT [FK_Orders_user] FOREIGN KEY ([ord_user_id]) REFERENCES [dbo].[Users] ([user_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Orders_History_user]...';


GO
ALTER TABLE [dbo].[Orders_History]
    ADD CONSTRAINT [FK_Orders_History_user] FOREIGN KEY ([user_id]) REFERENCES [dbo].[Users] ([user_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Orders_History_curier]...';


GO
ALTER TABLE [dbo].[Orders_History]
    ADD CONSTRAINT [FK_Orders_History_curier] FOREIGN KEY ([curier_id]) REFERENCES [dbo].[Users] ([user_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Rates_user]...';


GO
ALTER TABLE [dbo].[Rates]
    ADD CONSTRAINT [FK_Rates_user] FOREIGN KEY ([user_id]) REFERENCES [dbo].[Users] ([user_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Rates_food]...';


GO
ALTER TABLE [dbo].[Rates]
    ADD CONSTRAINT [FK_Rates_food] FOREIGN KEY ([food_id]) REFERENCES [dbo].[Foods] ([food_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_User_Roles_user_id]...';


GO
ALTER TABLE [dbo].[User_Roles]
    ADD CONSTRAINT [FK_User_Roles_user_id] FOREIGN KEY ([user_id]) REFERENCES [dbo].[Users] ([user_id]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_User_Roles_role_id]...';


GO
ALTER TABLE [dbo].[User_Roles]
    ADD CONSTRAINT [FK_User_Roles_role_id] FOREIGN KEY ([role_name]) REFERENCES [dbo].[Roles] ([role_name]);


GO
PRINT N'Creating Check Constraint unnamed constraint on [dbo].[Rates]...';


GO
ALTER TABLE [dbo].[Rates]
    ADD CHECK (rate IN('1', '2', '3','4','5'));


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
